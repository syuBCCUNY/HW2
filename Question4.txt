The only answer I could come up with comes from the java libarary for toBinaryString. https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html

"The unsigned integer value is the argument plus 232 if the argument is negative; otherwise it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading 0s. If the unsigned magnitude is zero, it is represented by a single zero character '0' ('\u0030'); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The characters '0' ('\u0030') and '1' ('\u0031') are used as binary digits."

My assumption is that since the bitwise operation occurs inside the toBinaryString, once bitwise operation exceeds 32, it resets to the original value. Where as in the second case, bitwise operation occurse outside of the method, 0 is used.